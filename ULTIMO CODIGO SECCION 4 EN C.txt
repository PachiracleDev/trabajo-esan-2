#include <stdio.h>
#include <pthread.h>
#include <unistd.h>
#include <sys/sysinfo.h>
#include <time.h>

// Función que ejecuta cada hilo
void* carga(void* arg) {
    int id = (int)(long)arg;  // Convertimos el argumento a un número entero
    printf("Hilo %d iniciado\n", id);

    // Simula la carga del procesador durante al menos 120 segundos
    time_t start_time = time(NULL);
    while (time(NULL) - start_time < 120) {
        // Bucle que ocupa el procesador
        for (long long i = 0; i < 1e8; i++);
    }

    printf("Hilo %d terminado\n", id);
    return NULL;
}

int main() {
    // Obtener el número de núcleos
    int num_nucleos = get_nprocs();
    printf("Número de núcleos: %d\n", num_nucleos);

    // Crear un arreglo de hilos
    pthread_t hilos[num_nucleos];

    // Crear los hilos
    for (int i = 0; i < num_nucleos; i++) {
        pthread_create(&hilos[i], NULL, carga, (void*)(long)i);  // Pasamos el índice como argumento
    }

    // Esperar a que todos los hilos terminen
    for (int i = 0; i < num_nucleos; i++) {
        pthread_join(hilos[i], NULL);
    }

    return 0;
}